// For more info, check https://www.netlify.com/docs/functions/#javascript-lambda-functions
import { find } from 'lodash';
import { map } from 'lodash';
import githubApi from '../lib/github-api';
import convertToMarkdown from '../lib/convert-json-to-frontmatter';

function convertToPost(formEntries, date) {
    const templateKey = formEntries.link ? 'embed-post' : 'blog-post';
    return {
        displayPage: 'story-wall',
        templateKey,
        name: formEntries.name,
        date,
        link: formEntries.link,
        occupation: formEntries.occupation,
        source: formEntries.source,
        tags: []

    }
}
 function getMasterSha() {
    return githubApi.get('git/refs/head')
        .then((response) => {
            const { body } = response;
            const master = find(body, (ele) => ele.ref === 'refs/heads/master');
            return master.object.sha;
        })
 }

export async function handler (event, context, callback) {
    const {
        payload
    } = JSON.parse(event.body)
    const { data } = payload;
    const slugName = `${Date.now()}-${data.name.replace(' ', '-').toLowerCase()}`;
    const newBranchName = `cms/story-wall/${slugName}`;
    const dataToUpload = convertToPost(data, payload.created_at);
    getMasterSha()
        .then(sha => {
            console.log('got sha', sha)
            const dataToSend = {
                ref: `refs/heads/${newBranchName}`,
                sha,
            }
            return githubApi.post('git/refs', dataToSend)
        })
        .then((returned) => {
            const convertedData = map(dataToUpload, (value, key) => ({[key]: value}))
            const fileContent = convertToMarkdown({
                frontmatter: convertedData,
                body: data.story
            })
            const base64Content = Buffer.from(fileContent).toString('base64')
            console.log('fileContent', fileContent)
            const dataToSend = {
                message: 'Automatically generated by Netlify Form',
                branch: newBranchName,
                content: base64Content
            }
            return githubApi.put(`contents/src/pages/story-wall/${slugName}.md`, dataToSend)
        })
        .then(() => {
            const dataToSend = {
                title: `Update Social Media Embed Post "${slugName}"`,
                head: newBranchName,
                base: 'master'
            }
            return githubApi.post('pulls', dataToSend)
        })
        .then(returned => {
            console.log(returned.body.issue_url)
            const ref = returned.body.issue_url;
            return githubApi.postFullUrl(`${ref}/labels`, {
                labels: ['netlify-cms/draft']
            })
        })
        .catch(console.log)
}
